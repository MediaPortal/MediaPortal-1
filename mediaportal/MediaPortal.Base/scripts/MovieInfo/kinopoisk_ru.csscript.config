<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <search>
        <title>
            <!--
                Usually "movieTitle" contains Russian title and "movieAlternate" contains English title (if exists).
                But in cases when there is no Russian title, "movieTitle" contains English and "movieAlternate" is empty.
                So if set "replaceEmptyAlternateWithTitle" to "true", empty "movieAlternate" would be replaced with "movieTitle".

                {movieSeparator} = If {movieTitle} and {movieAlternate} is not empty Then use separator Else use blank.
                For pattern: {movieTitle}{movieSeparator}{movieAlternate} ({year}) result {movieTitle}{movieSeparator}{movieAlternate} ({year}) or {movieTitle} ({year})
            -->
            <pattern>{movieTitle}{movieSeparator}{movieAlternate} ({year})</pattern>
            <separator> / </separator>
            <replaceEmptyAlternateWithTitle>false</replaceEmptyAlternateWithTitle>
            <!-- 
                Force IMDBID search ...
            -->
            <imdbidforce>false</imdbidforce>
            <!-- 
                Maximum IMDB Movie search retrive, 0 - Disable IMDBID Search
            -->
            <num>3</num>
            <!-- 
                kinopoiskTitle = pattern specified above.
                imdbTitle and imdbYear, movie title and movie year of search options from the imdb site.
                imdbID = IMDBID from the imdb site.
            -->
            <imdbpattern>{kinopoiskTitle} IMDB: {imdbTitle} ({imdbYear}) - {imdbID}</imdbpattern>
        </title>
        <strips>
            <strip>[\(\[]?(240|360|480|720|1080|1280|1440|1920|2160)(p|i)?[\(\]]?</strip>
            <strip>(\dx)?(rus|ukr|eng|(hard|soft)?sub)</strip>
            <strip>(h|x)26(3|4|5)</strip>
            <strip>VC-?1</strip>
            <strip>-?AVC</strip>
            <strip>-?AC(3|C)</strip>
            <strip>(Xvid|DivX)</strip>
            <strip>X?VCD</strip>
            <strip>Tele(cine|sync)</strip>
            <strip>BluRay</strip>
            <strip>HD(TS|TV)</strip>
            <strip>(DVD|VHS)Scr(eener)?</strip>
            <strip>DVD(-?(5|9))</strip>
            <strip>(Super|HQ\s?)DVD</strip>
            <strip>(((i|n)?VOD|CAM|SAT|DS|VHS|(PD)?TV|IPTV|DVB(-T\s?)?|DT(heater)?|L(aser)?D(isc)?|WEB|BD|B(lu)?R(ay)?|HD(TV)?|(HD-?)?DVD)-?((DL-?)?Rip|DL|Remux))</strip>
            <strip>[\(\[]?(S?CAM|(Super-?)?TS|TC|SCR|R5|WP)[\)\]]?</strip>
            <strip>[\(\[]?(((A|S|1|2|D|M)VO)|((D|S)UB))[\)\]]?</strip>
            <strip>(\d{3,4}MB)</strip>
            <strip>^$|(\s\d\s\d{2}$)</strip>
            <strip>[\(\[]?(Extended|Theatrical|Director's.cut|Unrated)[\)\]]?</strip>
            <strip>[\[\(]?(((ru-?)?(t(racke|o)r(rent)?)\s([a-z]{2,3})(?![a-z]))|((HD|nnm|IRON)-?Club|HELLYWOOD|iTunes))[\]\)]?</strip>
            <strip>by\s[^\s]+?$</strip>
        </strips>
        <!-- 
            Show more debug info for Search section
        -->
        <debug>false</debug>
    </search>
    <details>
        <title>
            <!--
                Usually "movieTitle" contains Russian title and "movieAlternate" contains English title (if exists).
                But in cases when there is no Russian title, "movieTitle" contains English and "movieAlternate" is empty.
                So if set "replaceEmptyAlternateWithTitle" to "true", empty "movieAlternate" would be replaced with "movieTitle".

                {movieSeparator} = If {movieTitle} and {movieAlternate} is not empty Then use separator Else use blank.
                For pattern: {movieTitle}{movieSeparator}{movieAlternate} ({year}) result {movieTitle}{movieSeparator}{movieAlternate} ({year}) or {movieTitle} ({year})
            -->
            <pattern>{movieTitle}{movieSeparator}{movieAlternate}</pattern>
            <separator> / </separator>
            <replaceEmptyAlternateWithTitle>false</replaceEmptyAlternateWithTitle>
        </title>
        <!--
            If set "retrievePicture" to "true", pictures will be loaded.
        -->
        <retrievePicture>true</retrievePicture>
        <!-- 
            Picture from themoviedb or kinopoisk
        -->
        <pictureSource>kinopoisk</pictureSource>
        <tmdbApiKey></tmdbApiKey>
        <!--
            Groups/Collection from TMDB
        -->
        <tmdbGroups>true</tmdbGroups>
        <!--
            Dowload from TMDB poster for groups/collection
        -->
        <tmdbGroupsPoster>true</tmdbGroupsPoster>
        <!--
            Set Delimiter for description.
        -->
        <descriptionDelimiter> </descriptionDelimiter>
        <!-- 
            Get movie awards from Kinopoisk
        -->
        <MovieAwards>true</MovieAwards>
        <!-- 
            Try to get full movie Trivia errors
        -->
        <fullTriviaError>false</fullTriviaError>
        <!-- 
            Raiting/Votes: imdb or kinopoisk
        -->
        <ratingSource>imdb</ratingSource>
        <!--
           If "fullmpaa" set to "true", MPAARating will contain a MPPAA rating with text and russian age rating, 
              example: "PG-13 - детям до 13 лет просмотр не желателен. ВР: зрителям, достигшим 12 лет."
           If "fullmpaa" set to "false", MPAARating will contain a clean MPPAA rating without text and if not, will contain russian age rating number, 
              example: "PG-13 or 12"
           "false" recommended for Titan skin.
        -->
        <fullmpaa>false</fullmpaa>
        <!--
          If "fullmpaa" set to "false" and "russianpr" set to "true" then replace the MPAA rating to Russian parent rating. Even if the MPAA rating is present.
        -->
        <russianpr>false</russianpr>
        <!--
          Add MPAA Rating text in Movie Plot.
        -->
        <addTextRatingToPlot>false</addTextRatingToPlot>
        <!-- 
            Show more debug info for Details section
        -->
        <debug>false</debug>
    </details>
    <network>
        <!--
            forces caches to submit the request to the origin server for validation
            before releasing a cached copy, every time. This is useful to assure that
            authentication is respected (in combination with public), or to maintain
            rigid freshness, without sacrificing all of the benefits of caching.
        -->
        <noCache>false</noCache>
        <!--
          [Retries] step for One URL with [TimeOut]+[TimeOutIncrement]:
        -->
        <TimeOut>10000</TimeOut>
        <TimeOutIncrement>2000</TimeOutIncrement>
        <Retries>3</Retries>
    </network>
</configuration>
